document.getElementById('quadraticForm').addEventListener('submit', function(event) {
    event.preventDefault();
    
    const a = parseFloat(document.getElementById('a').value);
    const b = parseFloat(document.getElementById('b').value);
    const c = parseFloat(document.getElementById('c').value);
    
    const resultBox = document.getElementById('result');
    resultBox.innerHTML = '';
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞
    if (isNaN(a) || isNaN(b) || isNaN(c)) {
        resultBox.innerHTML = '–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞!';
        resultBox.classList.add('show');
        return;
    }
    
    // –°–ª—É—á–∞–π a = 0
    if (a === 0) {
        resultBox.innerHTML = '–≠—Ç–æ –Ω–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ (a = 0)!';
        resultBox.classList.add('show');
        return;
    }
    
    const discriminant = b * b - 4 * a * c;
    let resultText;

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞: —É–±–∏—Ä–∞–µ—Ç .0 —É —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
    const formatNumber = (num) => {
        return num % 1 === 0 ? num.toString() : num.toFixed(4);
    };

    if (discriminant > 0) {
        const x1 = (-b + Math.sqrt(discriminant)) / (2 * a);
        const x2 = (-b - Math.sqrt(discriminant)) / (2 * a);
        resultText = `–ö–æ—Ä–Ω–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:<br><strong>x‚ÇÅ = ${formatNumber(x1)}</strong>, <strong>x‚ÇÇ = ${formatNumber(x2)}</strong>`;
    } else if (discriminant === 0) {
        const x = -b / (2 * a);
        resultText = `–û–¥–∏–Ω –∫–æ—Ä–µ–Ω—å:<br><strong>x = ${formatNumber(x)}</strong>`;
    } else {
        resultText = '–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ—Ä–Ω–µ–π –Ω–µ—Ç üòï';
    }
    
    resultBox.innerHTML = resultText;
    resultBox.classList.add('show');
});